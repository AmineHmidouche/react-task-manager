{"version":3,"sources":["components/Button.js","components/Header.js","components/Footer.js","components/About.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","About","to","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","marginLeft","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","useEffect","a","fetchTasks","tasksFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","filter","toggleReminder","taskToToggle","updtTask","path","exact","render","props","length","component","Footer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eea34c84.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nconst Button = ({ color , text  , onClick}) => {\r\n\r\n  \r\n    return ( \r\n    <button \r\n    onClick={onClick} \r\n    style={{backgroundColor:color}} \r\n    className=\"btn\">\r\n        \r\n        {text}\r\n\r\n    </button>\r\n       \r\n    )   \r\n}\r\nButton.defaultProps = {\r\n    color: 'steelbleu',\r\n  }\r\n  \r\n  Button.propTypes = {\r\n    text : PropTypes.string,\r\n    color: PropTypes.string,\r\n  }\r\n\r\nexport default Button\r\n","\r\nimport { useLocation } from 'react-router-dom'\r\nimport PropTypes from 'prop-types';\r\nimport Button from './Button'\r\nconst Header = ({title , onAdd , showAdd}) => {\r\n  const location = useLocation()\r\n    return (\r\n      <header>\r\n          <h1 >{title}</h1>\r\n          {location.pathname === '/' && (\r\n        <Button\r\n          color={showAdd ? 'red' : 'green'}\r\n          text={showAdd ? 'Close' : 'Add'}\r\n          onClick={onAdd}\r\n        />\r\n      )}\r\n      </header>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n}\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n}\r\n// css JX style \r\n\r\n// const headingStyle = {\r\n//   color:'red' ,\r\n//   backgroundColor : 'black'\r\n// }\r\nexport default Header\r\n","// import React from 'react'    \r\n\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst About = () => {\r\n    return   (\r\n        <footer>\r\n          <p>Copyright &copy; 2021</p>\r\n          <Link to='/about'>About</Link>\r\n        </footer>\r\n      )\r\n}\r\n\r\nexport default About\r\n","import { Link } from 'react-router-dom'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","import  {FaTimes} from 'react-icons/fa'\r\n\r\nconst Task = ({task , onDelete , onToggle }) => { \r\n        return (\r\n            <div className={`task ${task.reminder ? 'reminder' : ''} `}   onDoubleClick={()=>onToggle(task.id)}>\r\n                <h3>{task.text}</h3>\r\n                <FaTimes \r\n                style={{color:'red',marginLeft:'20em'}} \r\n                onClick={()=> onDelete(task.id)}\r\n               \r\n                />\r\n                <p>{task.day}</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Task\r\n\r\n","import Task from './Task'\r\nconst Tasks = ({tasks , onDelete , onToggle}) => { \r\n\r\n    \r\n\r\n        return (\r\n            <>\r\n            {tasks.map((task)=>(\r\n                // <h3>{task.text}</h3>\r\n\r\n                <Task \r\n                key={task.id}\r\n                task={task}\r\n                onDelete={onDelete}\r\n                onToggle={onToggle}\r\n                />\r\n\r\n                \r\n               \r\n                ))} \r\n            </>\r\n        )\r\n    }\r\n\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('')\r\n  const [day, setDay] = useState('')\r\n  const [reminder, setReminder] = useState(false)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    if (!text) {\r\n      alert('Please add a task')\r\n      return\r\n    }\r\n\r\n    onAdd({ text, day, reminder })\r\n\r\n    setText('')\r\n    setDay('')\r\n    setReminder(false)\r\n  }\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day & Time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Day & Time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTask","import  {useState , useEffect} from 'react' ;\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './components/About';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\n\n\nfunction App() {\n\n  const  [showAddTask, setShowAddTask] = useState(false)\n  const  [tasks , setTasks] = useState([])\n\n  useEffect(() =>{\n   const getTasks = async () => {\n     const tasksFromServer = await fetchTasks()\n     setTasks(tasksFromServer)\n   }\n    getTasks()\n  },\n  [])\n  \n// Fetch tasks \nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:5000/tasks')\n  const data = await res.json()\n  return data\n}\n// Fetch task \nconst fetchTask = async (id) => {\n  const res = await fetch(`http://localhost:5000/tasks/${id}`)\n  const data = await res.json()\n  return data\n}\n\n// Add task\nconst addTask =async  (task) => {\n  const res = await fetch('http://localhost:5000/tasks' ,{ \n  method:'POST' ,\n  headers : {'Content-type':'application/json' },\n  body : JSON.stringify(task) ,\n\n  })\n  const data = await res.json()\n  setTasks([...tasks , data])\n  // const id = Math.floor(Math.random()* 1000) + 1\n  // const newTask = {id , ...task}\n  // setTasks([...tasks , newTask])\n}\n\n// Delete Task \nconst deleteTask = async (id) => {\n\nawait fetch(`http://localhost:5000/tasks/${id}`,{\n  method: 'DELETE' ,\n})\nsetTasks(tasks.filter((task) => task.id !== id\n\n))\n}\n\n// Toggle Reminder \n\n  const toggleReminder = async (id) =>{\n  const taskToToggle = await fetchTask(id)\n  const updtTask = {...taskToToggle , reminder : !taskToToggle.reminder}\n  const res = await fetch(`http://localhost:5000/tasks/${id}`,{\n    method: 'PUT' ,\n    headers : {'Content-type':'application/json' },\n    body : JSON.stringify(updtTask) ,\n  })\nconst data = await res.json()\n  \n  setTasks(tasks.map((task) =>\n\n  task.id === id ? {... task , reminder : data.reminder} : task \n\n  ))\n}\n\n \n  return (\n    <Router>\n    <div className=\"container\">\n   <Header \n       onAdd={()=> setShowAddTask(!showAddTask) }\n       showAdd={showAddTask}\n    />\n    <Route\n          path='/'\n          exact\n          render={(props) => (\n            <>\n   {showAddTask && <AddTask onAdd={addTask} />}\n              {tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks To Show'\n              )}\n            </>\n          )}\n        />\n        <Route path='/about' component={About} />\n      <Footer/>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}